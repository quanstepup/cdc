version: '2'
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:latest
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
  kafka:
    image: quay.io/debezium/kafka:latest
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
#  kafka-ui:
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "3030:3030"
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=MyKafkaCluster
#      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
#    depends_on:
#      - kafka
  mysql:
    image: mysql:latest
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_USER=mysql
      - MYSQL_PASSWORD=123
      - MYSQL_DATABASE=inventory
    security_opt:
      - seccomp:unconfined
  postgres:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=inventory
  connect:
    image: debezium/connect:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DEBEZIUM_VERSION: ${DEBEZIUM_VERSION}
    ports:
      - 8083:8083
      - 5005:5005
    links:
      - kafka
      - mysql
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_source_connect_statuses
  debezium-ui:
    image: debezium/debezium-ui:1.9
    ports:
      - "8080:8080"
    environment:
      KAFKA_CONNECT_URIS: http://connect:8083
    depends_on:
      - connect
  kafka-ui:
    image: landoop/fast-data-dev:latest
    ports:
      - "3030:3030"
    environment:
      ADV_HOST: 127.0.0.1
    depends_on:
      - kafka